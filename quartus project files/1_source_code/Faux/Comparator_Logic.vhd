-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\Der_Faux_FPGA_V2_optimized\Comparator_Logic.vhd
-- Created: 2022-04-19 09:51:10
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Comparator_Logic
-- Source Path: Der_Faux_FPGA_V2_optimized/Der_Faux_FPGA/Comparator Logic
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Comparator_Logic IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        in_noninverted                    :   IN    std_logic_vector(45 DOWNTO 0);  -- sfix46_En42
        in_inverted                       :   IN    std_logic_vector(45 DOWNTO 0);  -- sfix46_En42
        clk_div                           :   IN    std_logic;
        out_mod                           :   OUT   std_logic_vector(45 DOWNTO 0);  -- sfix46_En54
        out_dem                           :   OUT   std_logic_vector(45 DOWNTO 0)  -- sfix46_En54
        );
END Comparator_Logic;


ARCHITECTURE rtl OF Comparator_Logic IS

  -- Component Declarations
  COMPONENT Shift_register
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          enable                          :   IN    std_logic;
          data_in                         :   IN    std_logic;
          data_out                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Shift_register
    USE ENTITY work.Shift_register(rtl);

  -- Signals
  SIGNAL in_noninverted_signed            : signed(45 DOWNTO 0);  -- sfix46_En42
  SIGNAL in_inverted_signed               : signed(45 DOWNTO 0);  -- sfix46_En42
  SIGNAL Relational_Operator1_relop1      : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant5_out1                   : signed(45 DOWNTO 0);  -- sfix46_En55
  SIGNAL Constant5_out1_dtc               : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Constant1_out1                   : unsigned(45 DOWNTO 0);  -- ufix46_En56
  SIGNAL Toggle_counter1_out1             : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion3_out1       : std_logic;
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL Constant5_out1_dtc_1             : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL switch_compare_1_2               : std_logic;
  SIGNAL Constant1_out1_dtc               : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Switch1_out1                     : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Constant1_out1_dtc_1             : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Switch6_out1                     : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Switch_out1                      : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Aliasing_FF1_delOut              : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Aliasing_FF1_ectrl               : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Aliasing_FF1_out1                : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Aliasing_FF1_last_value          : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Constant13_out1                  : std_logic;
  SIGNAL Relational_Operator3_relop1      : std_logic;
  SIGNAL switch_compare_1_3               : std_logic;
  SIGNAL Constant9_out1                   : std_logic;
  SIGNAL Relational_Operator2_relop1      : std_logic;
  SIGNAL switch_compare_1_4               : std_logic;
  SIGNAL Constant7_out1                   : std_logic;
  SIGNAL Switch3_out1                     : std_logic;
  SIGNAL Toggle_counter2_out1             : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion1_out1       : std_logic;
  SIGNAL Switch2_out1                     : std_logic;
  SIGNAL buffer_rsvd                      : std_logic;
  SIGNAL Relational_Operator5_relop1      : std_logic;
  SIGNAL switch_compare_1_5               : std_logic;
  SIGNAL Constant12_out1                  : signed(45 DOWNTO 0);  -- sfix46_En55
  SIGNAL Constant12_out1_dtc              : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Constant10_out1                  : unsigned(45 DOWNTO 0);  -- ufix46_En56
  SIGNAL Constant10_out1_dtc              : signed(45 DOWNTO 0);  -- sfix46_En54
  SIGNAL Dem_logic                        : signed(45 DOWNTO 0);  -- sfix46_En54

BEGIN
  u_Shift_register : Shift_register
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              enable => clk_div,
              data_in => Switch2_out1,
              data_out => buffer_rsvd
              );

  in_noninverted_signed <= signed(in_noninverted);

  in_inverted_signed <= signed(in_inverted);

  
  Relational_Operator1_relop1 <= '1' WHEN in_noninverted_signed > in_inverted_signed ELSE
      '0';

  
  switch_compare_1 <= '1' WHEN Relational_Operator1_relop1 > '0' ELSE
      '0';

  Constant5_out1 <= signed'("1000001000101011101111101100101010101011100011");

  Constant5_out1_dtc <= resize(Constant5_out1(45 DOWNTO 1), 46);

  Constant1_out1 <= unsigned'("1111101110101000100000100110101010101000111011");

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 1
  Toggle_counter1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '0' THEN
      Toggle_counter1_out1 <= '0';
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        Toggle_counter1_out1 <=  NOT Toggle_counter1_out1;
      END IF;
    END IF;
  END PROCESS Toggle_counter1_process;


  
  Data_Type_Conversion3_out1 <= '1' WHEN Toggle_counter1_out1 /= '0' ELSE
      '0';

  
  switch_compare_1_1 <= '1' WHEN Data_Type_Conversion3_out1 > '0' ELSE
      '0';

  Constant5_out1_dtc_1 <= resize(Constant5_out1(45 DOWNTO 1), 46);

  
  Relational_Operator_relop1 <= '1' WHEN in_noninverted_signed = in_inverted_signed ELSE
      '0';

  
  switch_compare_1_2 <= '1' WHEN Relational_Operator_relop1 > '0' ELSE
      '0';

  Constant1_out1_dtc <= signed(resize(Constant1_out1(45 DOWNTO 2), 46));

  
  Switch1_out1 <= Constant5_out1_dtc WHEN switch_compare_1 = '0' ELSE
      Constant1_out1_dtc;

  Constant1_out1_dtc_1 <= signed(resize(Constant1_out1(45 DOWNTO 2), 46));

  
  Switch6_out1 <= Constant5_out1_dtc_1 WHEN switch_compare_1_1 = '0' ELSE
      Constant1_out1_dtc_1;

  
  Switch_out1 <= Switch1_out1 WHEN switch_compare_1_2 = '0' ELSE
      Switch6_out1;

  
  Aliasing_FF1_ectrl <= Aliasing_FF1_delOut WHEN clk_div = '0' ELSE
      Switch_out1;

  Aliasing_FF1_lowered_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '0' THEN
      Aliasing_FF1_delOut <= to_signed(0, 46);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        Aliasing_FF1_delOut <= Aliasing_FF1_ectrl;
      END IF;
    END IF;
  END PROCESS Aliasing_FF1_lowered_process;


  Aliasing_FF1_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '0' THEN
      Aliasing_FF1_last_value <= to_signed(0, 46);
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        Aliasing_FF1_last_value <= Aliasing_FF1_out1;
      END IF;
    END IF;
  END PROCESS Aliasing_FF1_bypass_process;


  
  Aliasing_FF1_out1 <= Aliasing_FF1_last_value WHEN clk_div = '0' ELSE
      Aliasing_FF1_delOut;

  out_mod <= std_logic_vector(Aliasing_FF1_out1);

  Constant13_out1 <= '0';

  
  Relational_Operator3_relop1 <= '1' WHEN in_noninverted_signed > in_inverted_signed ELSE
      '0';

  
  switch_compare_1_3 <= '1' WHEN Relational_Operator3_relop1 > '0' ELSE
      '0';

  Constant9_out1 <= '0';

  
  Relational_Operator2_relop1 <= '1' WHEN in_noninverted_signed = in_inverted_signed ELSE
      '0';

  
  switch_compare_1_4 <= '1' WHEN Relational_Operator2_relop1 > '0' ELSE
      '0';

  Constant7_out1 <= '1';

  
  Switch3_out1 <= Constant9_out1 WHEN switch_compare_1_3 = '0' ELSE
      Constant7_out1;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 1
  Toggle_counter2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '0' THEN
      Toggle_counter2_out1 <= '0';
    ELSIF rising_edge(clk) THEN
      IF enb = '1' THEN
        Toggle_counter2_out1 <=  NOT Toggle_counter2_out1;
      END IF;
    END IF;
  END PROCESS Toggle_counter2_process;


  
  Data_Type_Conversion1_out1 <= '1' WHEN Toggle_counter2_out1 /= '0' ELSE
      '0';

  
  Switch2_out1 <= Switch3_out1 WHEN switch_compare_1_4 = '0' ELSE
      Data_Type_Conversion1_out1;

  
  Relational_Operator5_relop1 <= '1' WHEN Constant13_out1 < buffer_rsvd ELSE
      '0';

  
  switch_compare_1_5 <= '1' WHEN Relational_Operator5_relop1 > '0' ELSE
      '0';

  Constant12_out1 <= signed'("1000001000101011101111101100101010101011100011");

  Constant12_out1_dtc <= resize(Constant12_out1(45 DOWNTO 1), 46);

  Constant10_out1 <= unsigned'("1111101110101000100000100110101010101000111011");

  Constant10_out1_dtc <= signed(resize(Constant10_out1(45 DOWNTO 2), 46));

  
  Dem_logic <= Constant12_out1_dtc WHEN switch_compare_1_5 = '0' ELSE
      Constant10_out1_dtc;

  out_dem <= std_logic_vector(Dem_logic);

END rtl;

